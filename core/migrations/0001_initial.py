# Generated by Django 5.2.2 on 2025-06-05 14:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dispute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('additional_info', 'Additional Info Required'), ('resolved', 'Resolved'), ('rejected', 'Rejected'), ('escalated', 'Escalated')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('resolution_type', models.CharField(blank=True, choices=[('refund', 'Refund Issued'), ('replacement', 'Replacement Sent'), ('partial_refund', 'Partial Refund'), ('no_action', 'No Action Required'), ('other', 'Other')], max_length=20, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolution_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('assigned_to', models.CharField(blank=True, help_text='Staff member assigned to handle the dispute', max_length=100)),
                ('customer_notes', models.TextField(blank=True, help_text='Additional notes from the customer')),
                ('internal_notes', models.TextField(blank=True, help_text='Internal notes for staff')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, help_text='Target resolution date', null=True)),
            ],
            options={
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=255)),
                ('customer_name', models.CharField(max_length=255)),
                ('customer_email', models.EmailField(max_length=254)),
                ('order_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DisputeNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('file', models.FileField(upload_to='dispute_attachments/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(help_text='User who created the note', max_length=100)),
                ('dispute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='core.dispute')),
            ],
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('return_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='returns', to='core.order')),
            ],
        ),
        migrations.AddField(
            model_name='dispute',
            name='linked_return',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='core.return'),
        ),
        migrations.CreateModel(
            name='Tracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_type', models.CharField(choices=[('order', 'Order'), ('return', 'Return'), ('dispute', 'Dispute')], max_length=10)),
                ('status', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.CharField(blank=True, help_text='User', max_length=100)),
                ('additional_data', models.JSONField(blank=True, help_text='Additional tracking data', null=True)),
                ('dispute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tracking_history', to='core.dispute')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tracking_history', to='core.order')),
                ('return_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tracking_history', to='core.return')),
            ],
            options={
                'verbose_name_plural': 'Tracking',
                'ordering': ['-created_at'],
            },
        ),
    ]
